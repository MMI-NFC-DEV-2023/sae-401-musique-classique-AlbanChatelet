---
import HeaderPage from "../../components/HeaderPage.astro";
import Layout from "../../layouts/Layout.astro";
import LinkCompositeur from "../../components/LinkCompositeur.astro";
import PocketBase from "pocketbase";
import "../../styles/global.css";
import LinkInterpretation from "../../components/LinkInterpretation.astro";
import LinkFormation from "../../components/LinkFormation.astro";
export const prerender = false;

const { id } = Astro.params;

if (!id) {
  console.error("‚ùå ID manquant pour la page ≈ìuvre.");
  throw new Error("ID manquant pour la page ≈ìuvre.");
}

const pb = new PocketBase("https://sae303.pockethost.io");

let oeuvre = null;
let interpretations = [];
let formations = [];

async function fetchData() {
  try {
    console.log("üì° R√©cup√©ration des interpr√©tations...");
    interpretations = await pb.collection("interpretations").getFullList({
      filter: `titre_oeuvre = "${id}"`,
    });

    console.log(
      "‚úÖ Interpr√©tations r√©cup√©r√©es :",
      JSON.stringify(interpretations, null, 2)
    );
  } catch (error) {
    console.error("‚ùå Erreur interpr√©tations :", error);
  }

  if (interpretations.length > 0) {
    const interpretationIds = interpretations.map((i) => i.id);

    console.log("üßê IDs des interpr√©tations r√©cup√©r√©s :", interpretationIds);

    try {
      console.log("üì° R√©cup√©ration des formations...");
      formations = await pb.collection("formations").getFullList({
        filter: `interpretations = "${interpretationIds[0]}"`, // Filtre pour r√©cup√©rer les formations li√©es √† l'interpr√©tation
      });

      console.log(
        "‚úÖ Formations r√©cup√©r√©es :",
        JSON.stringify(formations, null, 2)
      );
    } catch (error) {
      console.error("‚ùå Erreur formations :", error);
    }
  }

  try {
    console.log("üì° R√©cup√©ration de l'≈ìuvre avec ses interpr√©tations...");
    oeuvre = await pb.collection("oeuvres").getOne(id, {
      expand: "interpretations.titre_oeuvre", // R√©cup√©rer les interpr√©tations et l'≈ìuvre associ√©e
    });

    console.log("‚úÖ ≈íuvre r√©cup√©r√©e :", oeuvre);
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration de l'≈ìuvre :", error);
  }
}

// Ex√©cution imm√©diate de la r√©cup√©ration des donn√©es
await fetchData();

const baseUrl = "https://sae303.pockethost.io";
---

<HeaderPage />
<Layout pageTitle={oeuvre ? `D√©tails de ${oeuvre.titre}` : "≈íuvre introuvable"}>
  <section
    class="flex flex-col items-center min-h-screen bg-gradient-to-b from-gray-900 to-gray-700 text-white py-12"
  >
    {
      oeuvre ? (
        <>
          <h1 class="text-4xl font-bold mb-6 tracking-wide">{oeuvre.titre}</h1>

          {/* Affichage du compositeur */}
          {oeuvre.expand?.compositeur && (
            <p class="text-lg">
              Compos√© par :
              <LinkCompositeur
                compositeur={{
                  id: oeuvre.expand.compositeur.id,
                  nom: oeuvre.expand.compositeur.nom,
                }}
              />
            </p>
          )}

          {/* Affichage de la cover de l'≈ìuvre */}
          {oeuvre.cover && (
            <img
              src={`${baseUrl}/api/files/oeuvres/${oeuvre.id}/${oeuvre.cover}`}
              alt={`Photo de ${oeuvre.titre}`}
              class="w-32 h-32 mx-auto mb-4 object-cover"
            />
          )}

          {/* Affichage des autres informations de l'≈ìuvre si disponibles */}
          {oeuvre.annee && <p>Ann√©e de sortie : {oeuvre.annee}</p>}

          {interpretations.length > 0 && (
            <div class="p-4 bg-gray-800 rounded-lg w-full max-w-3xl mt-6">
              <h2 class="text-2xl font-semibold mb-3">Interpr√©tations :</h2>
              <ul class="list-disc pl-5 space-y-1">
                {interpretations.map((interpretation) => {
                  // Recherche des formations associ√©es √† l'interpr√©tation
                  const formationAssociee = formations.find((f) =>
                    f.interpretations.includes(interpretation.id)
                  );

                  return (
                    <li key={interpretation.id} class="text-lg">
                      <LinkInterpretation interpretation={interpretation} />
                      {interpretation.annee_sortie}
                      {formationAssociee && (
                        <> - ID de la Formation : {formationAssociee.id}</>
                      )}
                    </li>
                  );
                })}
              </ul>
            </div>
          )}
        </>
      ) : (
        <p class="text-red-500 text-center">≈íuvre introuvable.</p>
      )
    }
  </section>
</Layout>
